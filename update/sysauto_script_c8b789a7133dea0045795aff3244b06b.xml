<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <condition/>
        <conditional>false</conditional>
        <name>Okta Import Users to ServiceNow</name>
        <run_as display_value="Doug Bagley">9faeb0d31319e20045795aff3244b097</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period/>
        <run_start>2016-09-15 23:18:03</run_start>
        <run_time>1970-01-01 08:00:00</run_time>
        <run_type>daily</run_type>
        <script><![CDATA[var okta_url = gs.getProperty("x_dmr_okta_group_m.OktaInstance");
var okta_api = gs.getProperty("x_dmr_okta_group_m.OktaAPIKey");

var getrestMessage = new sn_ws.RESTMessageV2();
var url = okta_url + "/api/v1/users";
//don't use in production as this will pull all users could be thousands use the time date updated by stamp to filter based on last run aka updated within last day

getrestMessage.setHttpMethod("get");
getrestMessage.setRequestHeader("Accept","application/json");
getrestMessage.setRequestHeader("Content-Type","application/json");
getrestMessage.setRequestHeader("Authorization",okta_api);
getrestMessage.setEndpoint(url);
getrestMessage.setHttpTimeout(10000);
var responseBody = getrestMessage.execute();
responseBody.waitForResponse(60);


var jsonString = responseBody.getBody();
var obj = global.JSON.parse(jsonString);



for (var i = 0; i < obj.length; i++) {
	//gs.print('ID=' + obj[i].id);
	var okta_id = obj[i].id;
	var okta_first_name = obj[i].profile.firstName;
	var okta_last_name = obj[i].profile.lastName;
	var okta_email = obj[i].profile.email;
	var okta_login = obj[i].profile.login;
	var create_user = "true";
	
	// test for user exisits
	var oktaUser= new GlideRecord('sys_user');
	oktaUser.addQuery('x_dmr_okta_group_m_okta_user_id', okta_id);
	oktaUser.query();
	while (oktaUser.next()) {
		// processing for the incident goes here
		// user already exists
		gs.info("Okta User Already Exists: " + okta_login);
		create_user = "false";
	}
	
	var oktaUser= new GlideRecord('sys_user');
	oktaUser.addQuery('user_name', okta_login);
	oktaUser.query();
	while (oktaUser.next()) {

		
		// user already exists then update okta user ID
		oktaUser.x_dmr_okta_group_m_okta_user_id = okta_id;
		oktaUser.update();
		gs.info("User Existed and okta ID added to: " + okta_login);
		create_user = "false";
	}	
	if (create_user == "true"){
	// create user
	gs.info("trying to create new record: " + create_user);
	var newUser= new GlideRecord('sys_user');
	newUser.initialize();
	newUser.first_name= okta_first_name;
	newUser.last_name = okta_last_name;
	newUser.user_name = okta_login;
	newUser.x_dmr_okta_group_m_okta_user_id = okta_id;
	newUser.email = okta_email;
	newUser.insert();
}
}]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>doug.bagley</sys_created_by>
        <sys_created_on>2016-09-17 11:53:21</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>c8b789a7133dea0045795aff3244b06b</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_name>Okta Import Users to ServiceNow</sys_name>
        <sys_package display_value="Okta Group Management" source="x_dmr_okta_group_m">17cfc9cb13f1ea0045795aff3244b045</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Okta Group Management">17cfc9cb13f1ea0045795aff3244b045</sys_scope>
        <sys_update_name>sysauto_script_c8b789a7133dea0045795aff3244b06b</sys_update_name>
        <sys_updated_by>doug.bagley</sys_updated_by>
        <sys_updated_on>2016-09-21 23:45:29</sys_updated_on>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
